# Global configuration
global_configuration=global_config

# Override global component defaults
fftsolver_enabled=.true.
pw_advection_enabled=.true.
simplesetup_enabled=.true.
smagorinsky_enabled=.true.
lower_bc_enabled=.true.
setfluxlook_enabled=.true. #This must be set to true if running with lower_bc
viscosity_enabled=.true.
diffusion_enabled=.true.
coriolis_enabled=.true.
damping_enabled=.true.
forcing_enabled=.true. 
randomnoise_enabled=.true.
mean_profiles_enabled=.true. #This must be set to true if running with damping
casim_enabled=.true.
casim_profile_dgs_enabled=.true.
socrates_couple_enabled=.true.
th_advection_enabled=.true.
iobridge_enabled=.true.
profile_diagnostics_enabled=.true.
scalar_diagnostics_enabled=.true.
conditional_diagnostics_column_enabled=.true.
conditional_diagnostics_whole_enabled=.true.
pdf_analysis_enabled=.true.
subgrid_profile_diagnostics_enabled=.true.
flux_budget_enabled=.true.
l_lem_dissipation_rate=.false.

registered=.true.                  # Print registered components and their version numbers to stdout
showcallbacks=.true.               # Print registered callbacks in calling order to stdout

cfl_monitor=.false.                # Print dtm changes and cfl info to stdout

# Specific diagnostic switches
l_cloud_mask=.true.                # Enables 3d binary SOCRATES-based total cloud mask diagnostic
cloud_mask_method=DEFAULT          # Cloud mask/fraction calculation method [ DEFAULT, SOCRATES ]
                                   # DEFAULT is based on exceeding qlcrit and qicrit
l_partial_liq_ice=.true.           # Calculate partial cloud fracions of liquid and ice, otherwise homogeneous binary

# --------------------------------------------------
# Parameters used to compute conditional diagnostics
# --------------------------------------------------
# ncond: (automatically calculated) number of conditions entered under cond_request
# ndiag: (automatically calculated) number of diagnostics entered under diag_request 
#      : MUST include 'area'
# Resulting diagnostic array dimensions are (time, ndiag, ncond*2, nz)
# from 1:ncond cond=.true.; ncond+1:ncond*2 cond=.false. 
# Debugging: when running the model, built with the cray debugger, the model will fail at the point of the 
#            IO reduction if ncond*2*ndiag > ~830.  Just run with fewer to get past this.
cond_request=ALL, BYu, BCu, NrBCu, AC, ACu, ACd, WG1, WL1, ALu, ALd, CLu, CLd, AH, AL, AI, PPd, VPd, PVd, MO, BM, AA, AV
diag_request=area, W, W2, TH, WTH, THP, WTHP, THVP, WTHVP, THP2, WTHSG, W3, RH, U, V, WU, WV, WUSG, WVSG, TEMP, THL, THLP, THLP2, QVLI, QVLIP, QVLIP2, QRSG, QRSGP, QRSGP2, WQVLIP, WQRSGP
# critical thv and up/downdraft thresholds
thvprcrit=0.0
wSupcrit=1.0
wSdwncrit=-1.0  
wupcrit=0.0
wdwncrit=0.0
# critical ql, qi and q_hydrometeor for conditional sampling
# Cloud liquid water mixing ratio critical minimum to define cloud [kg/kg]
qlcrit= 1.e-5    # also affects cloud diagnostics elsewhere in model
qicrit= 1.e-5    # also affects cloud diagnostics elsewhere in model
qpptcrit= 1.e-5
vpptcrit= 1.e-4
# Diff calculations of thv; .false. means thv=th(1+0.61qv) and .true. mean thv=th(1+0.61qv-(ql+qi))
thv_from_th_with_liqice=.true.
# --------------------------------------------------

# -----------------------------------------------------------------
# Parameters used to compute vertical velocity critical thresholds
# -----------------------------------------------------------------
# used only when pdf_analysis_enabled=.true.
# fractional percentiles: 
#    uppercrit=0.05 --> set updraft threshold at top 5% of w
#    dwnpercrit=0.05 --> set downdraft threshold at bottom 5% of w
show_critical_w=.false.    # Diagnostic printing
uppercrit=0.05
dwnpercrit=0.05

# vertical velocity histogram parameters
n_w_bins=750               # number of bins (max-min)/bin_size 
                           #   - max determined by these parameters
w_bin_size=0.1             # size of bin [m/s]
w_bin_min=-25.0            # lower bound of historgram [m/s]
# -----------------------------------------------------------------


# Control configuration
display_synopsis_frequency=20    # Status output write frequency [ts]
termination_time=86400.          # Model run end time [s]
dtm=1.0                          # Initial model time step [s]

# IO server configuration
ioserver_configuration_file="io/io_cfg_files/paracon_multi.xml"
moncs_per_io_server=8            # Set to 8 for MetOffice machines

time_basis=.true.                # logical for sampling and output intervals 
                                 #    [ .false. (timestep, DEFAULT) | .true. (time) ]
                                 #  - both treated as integers (no fractional-s time intervals)
sampling_frequency=90            # Sampling interval for time averaging,        integer [ ts | s ]
3d_sampling_frequency=360        # 3d Sampling interval for time averaging,     integer [ ts | s ]
mm=90.                           # An output interval,                             real [ s ]
mm1=360.                         # An output interval,                             real [ s ]
diag_write_freq=360.             # Reinitialization interval for diagnostic files, real [ s ]

diagnostic_file_3d="diagnostic_files/PECAN_diagnostic_3d.nc"
diagnostic_file_2d="diagnostic_files/PECAN_diagnostic_2d.nc"
diagnostic_file_1d="diagnostic_files/PECAN_diagnostic_1d.nc"
diagnostic_file_0d="diagnostic_files/PECAN_diagnostic_0d.nc"
diagnostic_file_sd="diagnostic_files/PECAN_diagnostic_sd.nc"
diagnostic_file_cd="diagnostic_files/PECAN_diagnostic_cd.nc"

# Checkpoint configuration 
checkpoint_frequency=0                             # Checkpoint file creation frequency [ts]
checkpoint_file="checkpoint_files/PECAN_dump.nc"   # Checkpoint file location and prefix

# Internal walltime configuration
check_walltime_frequency=100     # Frequency to check wall clock against walltime_limit [ts]
walltime_limit=00:10:00          # Internal wall clock time limit on simulation [hh:mm:ss]

# Advection choices (choose pw or tvd component schemes for flow, theta, and q advection)
advection_flow_fields=pw
advection_theta_field=tvd
advection_q_fields=tvd

# CFL configuration
cfl_frequency=17                  # Frequency for checking CFL conditions [ts]
cfl_cvismax=0.4                   # 'worst case' viscous stability parameter (eq 153 of lemdoc2.pdf)
cfl_cvelmax=0.4                   # Largest advective Courant number (eq 152 of lemdoc2.pdf)
cfl_dtmmax=10.0                   # Maximum time step [s]
cfl_dtmmin=0.001                  # Minimum time step [s]

# not convinced this works as fixing the gal 
# adds the gal to the wind, this is not correct.
# Set as false for now
fix_ugal=.false.
ugal=-5.0
fix_vgal=.false.
vgal=0.0

# Simple setup configuration
thref0=298.7259
surface_pressure=96000.
surface_reference_pressure=100000.
x_size=64
y_size=64
z_size=99
dxx=1000
dyy=1000
zztop=40000.0
kgd=9,17,75,99
hgd=500.,1500.,16000.,40000.
nsmth=20
galilean_transformation=.false.

enable_theta=.true.
use_anelastic_equations=.true.
origional_vertical_grid_setup=.true.
passive_th=.false.
passive_q=.false.
backscatter=.false.
use_viscosity_and_diffusion=.true.

# Initialization of fields
l_init_pl_theta=.true.
z_init_pl_theta=0.,   800., 1200.,3500.,4100.,8200.,12500.,13500.,14200.,16000.,20000.,24000.,28000.,32000.,36000.,40000.
f_init_pl_theta=297.0,297.0,300.0,306.5,311.0,318.0,328.5, 333.0, 340.0, 371.0, 483.0, 610.0, 738.0, 928.0, 1227.0,1447.0
l_init_pl_u=.true.
z_init_pl_u=0.0, 40000.
f_init_pl_u=-5.0, -5.0
l_init_pl_v=.false.
l_init_pl_q=.true.
names_init_pl_q=vapour
z_init_pl_q=0.,     680.,   1300., 3500., 4150.,  4850.,  5200.,  6100.,  7000.,  8150.,  9500.,   10500.,  11500.,  12250.,  13000.,  14000.,   18000., 40000.
f_init_pl_q=13.0e-3,12.5e-3,8.5e-3,4.3e-3,2.44e-3,1.52e-3,1.31e-3,0.75e-3,0.48e-3,0.28e-3,0.080e-3,0.038e-3,0.012e-3,0.008e-3,0.003e-3,0.0005e-3,0.0,    0.0

l_matchthref=.true.

# Smagorinsky configuration
# Default values for the smagorinsky subgrid constants
# smag-subb=40.0
# smag-subc=16.0
# The subgrid constant values for the 'conventional' subgrid model 
# of Brown (1999)
smag-subb=1.43
smag-subc=1.43

# Random noise
l_rand_pl_theta=.true.
z_rand_pl_theta=0.0, 7000.0, 7001.0, 40000.
f_rand_pl_theta=0.1, 0.1, 0.0000, 0.0000
names_rand_pl_q=vapour
z_rand_pl_q=0.0, 7000.0, 7001.0, 40000.
f_rand_pl_q=0.025e-3, 0.025e-3, 0.0000, 0.0000

# Simple cloud
max_height_cloud=30000.

# physical constants
z0=0.0002
z0th=0.0002

# Coriolis
fcoriol=9.07875e-5       # f = 2 * 7.292e-5 * sin(latitude_deg)  [see radiation latitude for consistency]
geostrophic_wind_rate_of_change_in_x=0.0
geostrophic_wind_rate_of_change_in_y=0.0
surface_geostrophic_wind_x=-5.0
surface_geostrophic_wind_y=0.0

# Damping configuration
dmptim=0.0002
zdmp=20000.0
hdmp=5000.0

# Time-varying forcing --------------------------------------------------------------------------------------------
# enter files as the base directory-relative path to file
# specify the vertical coordinate of the forcing as 'height' [m] or 'pressure' [Pa]
#  - expecting NetCDF variable names to be "wsubs", "theta_tendency", or "q_tendency" for
#    subsidence, theta, and water vapour forcing time-height profiles, respectively.
#  - expecting temporal coordinate variable/dimension to be called "time".
#  - expecting wsubs as m/s 
#     - This is a subsidence velocity only, not divergence rate.
#     - When using use_time_varying_subsidence=.true., subsidence_input_type is ignored.
#  - expecting theta_tendency as K/s
#     - Allowed to be temperature (instead of theta), but requires convert_input_theta_from_temperature=.true.
#     - convert_input_theta_from_temperature will also apply to any additional constant forcing.
#  - expecting q_tendecy as kg/kg/s
use_time_varying_subsidence=.false.
varying_subsidence_file=
varying_subsidence_coordinate=         # 'height' [m] or 'pressure' [Pa]

use_time_varying_theta=.true.
varying_theta_file=testcases/GASS_diurnal/pecan60varanaPECANC1.c1.20150601.000000_reformed.nc
varying_theta_coordinate=pressure      # 'height' [m] or 'pressure' [Pa]
convert_input_theta_from_temperature=.true.

use_time_varying_q=.true.
varying_q_file=testcases/GASS_diurnal/pecan60varanaPECANC1.c1.20150601.000000_reformed.nc
varying_q_coordinate=pressure          # 'height' [m] or 'pressure' [Pa]


# Subsidence profile
l_subs_pl_theta=.false.
l_subs_pl_q=.false.

# Large-scale forcing
# Add om a component to force theta
l_constant_forcing_theta=.false.
l_constant_forcing_q=.false.
l_constant_forcing_u=.true.
l_constant_forcing_v=.true.

# TENDENCY=0, RELAXATION=1, INCREMENTS=2
constant_forcing_type_theta=0
constant_forcing_type_q=0
constant_forcing_type_u=1
constant_forcing_type_v=1

relax_to_initial_u_profile=.true.
relax_to_initial_v_profile=.true.

forcing_timescale_u=21600.
forcing_timescale_v=21600.

# Forcing profiles

# surface flux config
# type_of_surface_boundary_conditions=PRESCRIBED_FLUX=0, PRESCRIBED_VALUES=1
use_surface_boundary_conditions=.true.
use_time_varying_surface_values= .true.
surface_conditions_file=testcases/GASS_diurnal/pecan60varanaPECANC1.c1.20150601.000000_reformed.nc
type_of_surface_boundary_conditions = 0

#CASIM options
option=22222
l_warm=.false.
aerosol_option=0
iopt_act=0
iopt_inuc=0
process_level=0
l_override_checks = .true.
number_q_fields=11


#----------------------------------------------------------------------------------------------
# SOCRATES inputs
mcc_temperature_profile  = components/socrates_couple/data/mcc_profiles/one_km/mls.t.nc
mcc_vapour_profile       = components/socrates_couple/data/mcc_profiles/one_km/mls.q.nc
mcc_ozone_profile        = components/socrates_couple/data/mcc_profiles/one_km/mls.o3.nc
# Add options for rad_cntrl
spectral_file_lw           = /projects/monc/fra23/socrates_spectra/ga7/sp_lw_ga7
spectral_file_sw           = /projects/monc/fra23/socrates_spectra/ga7/sp_sw_ga7

# 5 is clear sky, 2 is cloud (ice and liquid no overlap), 1 (ice and liquid full overlap)
i_cloud_representation  = 2

## Time and location variables for socrates
l_360 = .false.           #  360 days in year as opposed to 365 (a UM thing
                         #  in the LEM, is this still required??)
l_solar_fixed  = .false. # true equals fixed insolation using value in sol_fixed
l_no_solar     = .false.
solar_fixed    = 1361.0  # prescribed insolation value
sec_fixed      = 1.15470054   # prescribed 1/cos(solar_zenith_angle)
latitude       = 38.5    # latitude for the location of radiation calc [match to coriolis!]
longitude      = -98.75  # longitude for the location of radiation calc
  # Collectively, the next 3 times, rad_start_(year, day time), will constitute the model start
  # date, as far as the insolation is concerned.  Model times will be seconds from that date.
rad_start_year = 2015.0  # simulation year for earth sun distance
rad_start_day  = 152.0   # day number from January 1st
rad_start_time = 0.0     # Start time [hour] for the radiation 
rad_interval   = 30      # If time_basis=.true.: time [ s ] between radiation calls
                         # If time_basis=.false.: timesteps [ ts ] between radiation calls
                         # If .le. zero, radiation called every timestep, otherwise (gt than 0)
                         #   radiation will be called less frequently

## Surface albedo variables for socrates
l_variable_srf_albedo = .false. # not coded yet but will allow variable
                                # surface albedo with solar zenith angle
surface_albedo = 0.04    # surface albedo (fixed in time)

mphys_nq_l=1 # cloud liquid mass
mphys_nd_l=0 # cloud drop number
mphys_nq_r=1 # rain mass
mphys_nq_i=1 # ice mass
mphys_nq_s=1 # snow mass
mphys_nq_g=1 # graupel mass

l_fix_re       = .true.
fixed_cloud_re = 10.0 # effective radius for cloud droplets 10 microns
fixed_ice_re   = 30.0 # effective radius for ice 30 microns
#---------------------------------------------------------------------------------------------
